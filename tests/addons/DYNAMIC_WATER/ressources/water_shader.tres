[gd_resource type="ShaderMaterial" load_steps=4 format=2]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;
render_mode blend_mix;

uniform sampler2D noise : hint_black;
uniform float deform_speed = 0.1;
uniform vec2 deform_size = vec2(0.01,0.01);

uniform vec2 scale=vec2(1.0,1.0);
uniform vec4 color:hint_color=vec4(0.0,0.0,1.0,0.5);

void fragment(){
		vec2 u_pos = SCREEN_UV * scale + TIME * deform_speed;
		vec2 offset = vec2(texture(noise, u_pos).x,texture(noise, u_pos).y)-0.35;
		COLOR= mix(textureLod(SCREEN_TEXTURE,SCREEN_UV+offset*deform_size,0.0), vec4(color.rgb,1.0),color.a);
		
	}
	"

[sub_resource type="OpenSimplexNoise" id=2]

[sub_resource type="NoiseTexture" id=3]
seamless = true
noise = SubResource( 2 )

[resource]
shader = SubResource( 1 )
shader_param/deform_speed = 0.1
shader_param/deform_size = Vector2( 0.005, 0.005 )
shader_param/scale = Vector2( 1, 1 )
shader_param/color = Color( 0, 0, 1, 0.392157 )
shader_param/noise = SubResource( 3 )
